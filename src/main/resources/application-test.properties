# Test Profile Configuration for Chat Service
spring.application.name=chat-service

# Server Configuration
server.port=8083
server.servlet.context-path=/chat

# H2 Database Configuration (In-Memory for Testing)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA Configuration for H2
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (for debugging)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# MongoDB Configuration (Mock for testing)
spring.data.mongodb.uri=mongodb://localhost:27017/chat_messages_test
spring.data.mongodb.auto-index-creation=true

# Redis Configuration (Optional for testing)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms

# Kafka Configuration (Optional for testing)
spring.kafka.bootstrap-servers=localhost:9092

# JWT Configuration
jwt.secret=chat-service-secret-key-for-jwt-token-generation-and-validation
jwt.expiration=900000

# Auth Service Integration
chat.auth-service.url=http://localhost:8081
chat.auth-service.timeout=5000

# Actuator Configuration - Enable Health Endpoints
management.endpoints.web.exposure.include=health,info,metrics,env,beans
management.endpoint.health.show-details=always
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true

# Logging Configuration
logging.level.com.legacykeep=DEBUG
logging.level.org.springframework=INFO
logging.level.org.springframework.web=DEBUG
